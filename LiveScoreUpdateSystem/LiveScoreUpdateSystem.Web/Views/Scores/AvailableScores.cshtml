@model DateTime

<div class="container body-content col-md-offset-3">
    <div class="content_in content_in_s">
        <div class="live_navigation clearfix" style="margin-top: 10px;">
            <div class="calendar_wrap clearfix">
                <span id="date">
                    @(Html
                      .Kendo()
                      .DatePicker()
                      .Name("ScoresDate")
                      .Deferred()
                      .HtmlAttributes(new { id = "scores-date", value = Model })
                      .Format("dd/mm/yyyy"))
                </span>
                @*@(Html.Kendo()
                    .DatePicker()
                    .Name("DatePicker")
                    .Deferred()
                    .HtmlAttributes(new { value = DateTime.Now })
                    .Format("dd/mm/yyyy"));*@
            </div>
        </div>

        <div class="matches_list_wrap">
            @(Html.Action<ScoresController>(c => c.ByDate(Model)))
        </div>
    </div>

    <div>
        <input id="messageInput" class="form-control" />
        <button id="chatButton" class="btn btn-success">Add</button>
        <div id="messagesDiv">
        </div>
    </div>
</div>

@section Scripts{
    <script>
        $('#scores-date').on('change', (ev) => {
            const date = kendo.toString($("#scores-date").data("kendoDatePicker").value(), 'd');
            const dateEncoded = encodeURI(date);

            const url = `/scores/bydate?date=${dateEncoded}`
            console.log(url);

            $.get(url, (dataHtml) => {
                $('.matches_list_wrap').html(dataHtml);
                $('#scores-date').val(date);
            });
        });
    //const dateChanged = (ev) => {
    //    // const date = kendo.toString($("#scores-date").data("kendoDatePicker").value(), 'd');
    //    const dateEncoded = encodeURI(date);
    //    const url = `/scores/bydate?date=${dateEncoded}`

    //    $.get(url, (dataHtml) => {
    //        $('.matches_list_wrap').html(dataHtml);
    //        $('#scores-date').val(date);
    //    });
    </script>
    <script>
        $(() => {
            function blinker($element) {
                $($element).fadeOut("slow");
                $($element).fadeIn("slow");
            }
          
            blinker('.timer-container');

            $('.fixture').each((_, el) => {
                const $element = $(el);
                const $timeContainer = $element.find('.time-container');

                const gameStatus = $element.attr('data-fixture-status');

                let timeOffset = 0;
                if (gameStatus === 'FullTime') {
                    $timeContainer.html('FT');
                } else if (gameStatus === 'HalfTime') {
                    $timeContainer.html('HT');
                } else if (gameStatus === "FirstHalf" || gameStatus === "SecondHalf") {
                    timeOffset = gameStatus === "SecondHalf" ? 45 : 0;

                    const currentDate = new Date();
                    const halfTimeStartString = gameStatus === 'SecondHalf' ?
                        $element.attr('data-fixture-second-half-start') :
                        $element.attr('data-fixture-first-half-start');

                    const halfTimeDate = new Date(halfTimeStartString);
                    const diffInMinutes = Math.ceil(Math.abs(new Date() - halfTimeDate) / 60000);

                    let timer = timeOffset + diffInMinutes;
                    $timeContainer.html(timer);
                    setInterval(() => {
                        if (gameStatus == "FirstHalf" && timer < 45) {
                            timer += 1;
                        }
                        else if (gameStatus == "SecondHalf" && timer < 90) {
                            timer += 1;
                        }
                      
                        $timeContainer.html(timer);
                        blinker('.timer-container');
                    }, 100000)

                    setInterval(() => {
                        blinker($timeContainer);
                    }, 3000);
                }
            });
        })
    </script>
   
    @Scripts.Render("~/bundles/signalR");
    <script src="/signalr/hubs"></script>
    <script>
        $(() => {
            $.connection.hub.start();

            const chat = $.connection.goalScored;
            chat.client.recieveMessage = (msg) => {
                $('#messagesDiv').append(msg + '<br/>');
            };

            $('#chatButton').on('click', () => {
                chat.server.sendMessage($('#messageInput').val());
            });
        })
    </script>
}